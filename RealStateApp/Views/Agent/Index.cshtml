@model List<UserViewModel>
@inject IHttpContextAccessor _httpContextAccessor

@{
    ViewData["Title"] = "Our Agents";

    var user = _httpContextAccessor.HttpContext.Session.Get<AuthenticationResponse>("user");

    // This is to be modified since you're not supposed to have two roles
    bool isAdmin = user != null && user.Roles[0] == Roles.Admin.ToString();
}

@if (!isAdmin)
{
    <section class="py-12 bg-gray-100">
        <div class="container mx-auto px-6 md:px-12 lg:px-24">
            <h2 class="text-4xl font-bold mb-8">Our Agents</h2>
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
                @foreach (var agent in Model)
                {
                    @await Component.InvokeAsync("AgentCard", agent)
                }
            </div>
        </div>
    </section>
}
else
{
    <section class="py-12 bg-gray-100">
        <div class="container mx-auto px-6 md:px-12 lg:px-24">
            <h2 class="text-4xl font-bold mb-8">Agents Table</h2>
            <div class="overflow-x-auto">
                <table class="min-w-full bg-white">
                    <thead>
                        <tr>
                            <th class="py-2 px-4 border-b">ID</th>
                            <th class="py-2 px-4 border-b">First Name</th>
                            <th class="py-2 px-4 border-b">Last Name</th>
                            <th class="py-2 px-4 border-b">Username</th>
                            <th class="py-2 px-4 border-b">Phone</th>
                            <th class="py-2 px-4 border-b">Email</th>
                            <th class="py-2 px-4 border-b">National ID</th>
                            <th class="py-2 px-4 border-b">Status</th>
                            <th class="py-2 px-4 border-b">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var agent in Model)
                        {
                            <tr>
                                <td class="py-2 px-4 border-b">@agent.Id</td>
                                <td class="py-2 px-4 border-b">@agent.FirstName</td>
                                <td class="py-2 px-4 border-b">@agent.LastName</td>
                                <td class="py-2 px-4 border-b">@agent.Username</td>
                                <td class="py-2 px-4 border-b">@agent.Phone</td>
                                <td class="py-2 px-4 border-b">@agent.Email</td>
                                <td class="py-2 px-4 border-b">@agent.NationalId</td>
                                <td class="px-6 py-4 border-b border-gray-300">
                                    @if (agent.IsActive)
                                    {
                                        <span class="text-green-600 font-bold">Active</span>
                                    }
                                    else
                                    {
                                        <span class="text-red-600 font-bold">Inactive</span>
                                    }
                                </td>
                                <td class="py-2 px-4 border-b">
                                    <form asp-controller="Agent" asp-action="ToggleStatus" method="post" class="inline">
                                        <input type="hidden" name="id" value="@agent.Id" />
                                        <button type="submit" class="px-4 py-2 rounded-md hover:bg-opacity-75 @(agent.IsActive ? "bg-red-500 text-white hover:bg-red-600" : "bg-green-500 text-white hover:bg-green-600")">
                                            @(agent.IsActive ? "Deactivate" : "Activate")
                                        </button>
                                    </form>
                                    <a href="@Url.Action("Update", "Agent", new { id = agent.Id })" class="bg-green-500 text-white px-4 py-2 rounded-md hover:bg-green-600 ml-2">Edit</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </section>
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
